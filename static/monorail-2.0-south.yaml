swagger: "2.0"
info:
  version: "0.0.1"
  title: Hello World App
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths
basePath: /api/2.0
#
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /obms/library:
    x-swagger-router-controller: obms
    get:
      operationId: getObmsLibrary
      summary: |
        get list of possible OBM services
      description: |
        get list of possible OBM services
      tags:
        - obms
        - get
      responses:
        200:
          description: |
            get list of possible OBM services
          schema:
            type: object
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

definitions:
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
  VersionsResponse:
    required:
      - message
    properties:
      message:
        type: string

  Error:
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
  catalog:
    type: object
    properties:
      id:
        type: string
      source:
        type: string
      node:
        $ref: '#/definitions/node'
      data:
        type: object
        description: arbitrary json object
    required:
    - id
    - source
    - node
  node:
    type: object
    properties:
      id:
        type: string
      profile:
        type: string
      name:
        type: string
      obmSettings:
        type: object
      ipAddresses:
        type: object
      workflows:
        type: array
        items:
          $ref: '#/definitions/graphobject'
      catalogs:
        type: array
        items:
          $ref: '#/definitions/catalog'
      sku:
        $ref: '#/definitions/sku'
    required:
    - profile
    - name
  graphobject:
    properties:
      id:
        type: string
      instanceid:
        type: string
      context:
        type: object
      definition:
        type: object
      tasks:
        type: object
      node:
        $ref: '#/definitions/node'
  sku:
    properties:
      id:
        type: string
      name:
        type: string
      rules:
        type: object
      nodes:
        type: array
        items:
          $ref: '#/definitions/node'
      discoveryGraphName:
        type: string
      discoveryGraphOptions:
        type: object
  lease:
    properties:
      mac:
        type: string
      ipAddress:
        type: string
      reservationTimer:
        type: integer
        format: int32
      reservationExpiresAt:
        type: integer
        format: int64
      renewalTimer:
        type: integer
        format: int32
      rebindingTimer:
        type: integer
        format: int32
      expirationTimer:
        type: integer
        format: int32
      renewalExpiresAt:
        type: integer
        format: int64
      rebindExpiresAt:
        type: integer
        format: int64
      leaseExpiresAt:
        type: integer
        format: int64
      boundFlag:
        type: boolean
      reservedFlag:
        type: boolean
      reserveTimer:
        type: string
        format: int64
    example:
      mac: 08:00:27:52:d2:a4
      ipAddress: 10.1.1.2
      reservationTimer: 30
      renewalTimer: 21600
      rebindingTimer: 4320
      expirationTimer: 86400
      renewalExpiresAt: 1424149074811
      rebindExpiresAt: 1424131794811
      leaseExpiresAt: 1424213874811
      boundFlag: true
      reservedFlag: false
    required:
    - mac
    - ipAddress
